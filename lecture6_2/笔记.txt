再次踩坑：在js中使用DOM需要在html内容渲染完毕后才能选中元素，所以要么把js函数放在addEventListener('DOMContentLoaded', ...)中，要么放在html的相关内容后
另外：注意是'DOMContentLoaded'不是'DOMcontentloaded'！大小写很重要，这个错误不仅编辑器识别不出，浏览器的控制台也不会报错
还有: for(let i=0; i<100; i++)，注意是分号不是逗号

匿名函数() => {}  理解为 Function annonymous() {...}
相应的 someName => {} 为 Function annonymous(someName)
而用在addEventListener中，addEventListener('event', a => {} )等于addEventListener('event', function(a){} )
同时需要注意的是，监听器的回调函数中的参数和触发监听的事件有关。譬如addEventListener('click', a => {} )，这里的a是一个事件对象，包含了用户点击的各种信息
如坐标、鼠标按键、被点击的元素等，所以在函数体中可以通过这个参数进行调用


数组.forEach(function)  等于轮流执行  function(每一个数组元素)
_____________________________________
animation部分

现在进行到给按钮添加博文消失再删除的效果,尝试和视频写不同的代码达到相同的效果
成功！addEvenListener可以嵌套。

//这部分是自己试验，和示范不同的方法达到同样的效果，经过测试有效
                // hide.onclick= function(){
                //     this.parentElement.style.animationPlayState = 'running'
                //     this.parentElement.addEventListener('animationend', () => {
                //         this.parentElement.remove()
                //     })
                // }

_____________________________________
svg部分

<script>放在body tag中、放在head tag中和并列于这两个tag有什么区别？ gpt回答：
将 JavaScript 代码放在 <body> 标签中意味着脚本将在页面的主体内容加载后执行。如果脚本依赖于页面元素（例如按钮或文本框）等，则需要确保这些元素已加载。
将 JavaScript 代码放在 <head> 标签中意味着脚本将在页面的主体内容加载之前执行。这对于预加载页面所需的某些脚本和库非常有用，但是如果脚本依赖于页面元素，则可能会导致错误，因为这些元素还没有被浏览器加载。
将 JavaScript 代码放在并列于 <head> 和 <body> 标签之外的地方通常是最佳实践，例如直接放在 HTML 文件的末尾 </body> 标签前。这可以确保脚本在所有页面元素都已加载后执行，并且可以提高页面加载速度。

疑问：d3.js中，svg的新增元素都是当场定义属性，没有变量名，后面如果想操作该怎么做？视频中是通过对一个自行定义的数组操作来实现，但是没看到数组和svg关联的片段。